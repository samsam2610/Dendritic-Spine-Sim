begintemplate SpinyCell
public spine_neck, spine_head
objref rand
create spine_neck, spine_head

proc init() { local x0, y0, z0, offset
    x0 = $1
    y0 = $2
    z0 = $3
    dx = $4
    dy = $5
    dz = $6
    offset = 0.5
    rand = new Random()
    rand.uniform(0, 1)

    // Randomize neck geometry
    neck_L = 5 + 0.15 * rand.repick()
    neck_d = 0.15 + 0.1 * rand.repick()

    spine_neck {
        nseg = 1
        L = neck_L
        diam = neck_d
        insert pas
        cm = 1.0
        Ra = 150
        g_pas = get_g_pas(L, diam)
        e_pas = -65
        pt3dclear()
        pt3dadd(x0, y0, z0, 5)
        pt3dadd(x0+dx, y0+dy, z0+dz, 5)
    }

    // Randomize head geometry
    head_L = 0.4 + 0.3 * rand.repick()
    head_d = 0.35 + 0.3 * rand.repick()

    spine_head {
        nseg = 1
        L = head_L
        diam = head_d
        insert pas
        cm = 1.0
        Ra = 100
        g_pas = get_g_pas(L, diam)
        e_pas = -65
        pt3dclear()
        pt3dadd(x0, y0 + offset, z0, 6)
        pt3dadd(x0+dx, y0 + dy + 0.4, dz, 6)
    }

    connect spine_head(0), spine_neck(1)
}

func get_g_pas() { local L, diam, g_pas_val
    L = $1
    diam = $2
    L = L * 1e-4
    diam = diam * 1e-4
    g_pas_val = 0.0005 * (0.5 / (L * diam + 1e-9))
    return g_pas_val
}

endtemplate SpinyCell
